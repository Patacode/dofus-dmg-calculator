name: Release new version

on:
  workflow_dispatch:
    inputs:
      bumpLevel:
        description: "Bump level"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      withIntegrationTests:
        description: "Enable integration tests execution"
        required: true
        type: boolean
      withBenchmarking:
        description: "Enable benchmarks execution"
        required: false
        type: boolean

jobs:
  prepare:
    name: Prepare data for deployment
    runs-on: ubuntu-latest
    steps:
      - name: Print metadata
        run: |
          echo "Bump level: $BUMP_LEVEL"
          echo "Integration tests: $WITH_INTEGRATION_TESTS"
          echo "Benchmarking: $WITH_BENCHMARKING"
        env:
          BUMP_LEVEL: ${{ inputs.bumpLevel }}
          WITH_INTEGRATION_TESTS: ${{ inputs.withIntegrationTests }}
          WITH_BENCHMARKING: ${{ inputs.withBenchmarking }}
      - name: Checkout latest changes
        uses: actions/checkout@v4
      - name: Archive latest changes
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: ./
          retention-days: 1

  build:
    name: Build crate
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Fetch latest changes
        uses: actions/download-artifact@v4
        with:
          name: source-code
      - name: Generate production-ready artifacts
        run: cargo build --release --verbose
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: ./target
          retention-days: 1
  test:
    name: Test crate
    runs-on: ubuntu-latest
    needs: [prepare, build]
    steps:
      - name: Fetch production artifacts
        uses: actions/download-artifact@v4
        with:
          name: target
      - name: Check code formatting
        run: cargo fmt --check
      - name: Run library unit tests
        run: cargo test --lib
        if: ${{ success() }}
      - name: Run integration tests
        run: cargo test --test integration_tests
        if: ${{ success() && inputs.withIntegrationTests }}
      - name: Run benchmarks
        run: cargo bench
        if: ${{ success() && inputs.withBenchmarking }}
  deploy:
    name: Deploy crate
    runs-on: ubuntu-latest
    needs: [prepare, build, test]
    steps:
      - name: Fetch production artifacts
        uses: actions/download-artifact@v4
        with:
          name: target
      - name: Trigger new deployment
        run: cargo release ${{ inputs.bumpLevel }} --execute
  cleanup:
    name: Cleanup artifacts
    runs-on: ubuntu-latest
    needs: [prepare, build, test, deploy]
    steps:
      - name: Delete all archived artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          failOnError: false
          name: |
            source-code
            target
