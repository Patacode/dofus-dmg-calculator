name: Release new version

on:
  workflow_dispatch:
    inputs:
      bumpLevel:
        description: "Bump level"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      withIntegrationTests:
        description: "Execute integration tests"
        required: true
        type: boolean
      withBenchmarking:
        description: "Execute benchmarks"
        required: false
        type: boolean
      dryRun:
        description: "Deploy in dry run mode"
        required: false
        type: boolean

jobs:
  prepare:
    name: Prepare data for deployment
    runs-on: ubuntu-latest
    steps:
      - name: Print metadata
        run: |
          echo "Bump level: $BUMP_LEVEL"
          echo "Integration tests: $WITH_INTEGRATION_TESTS"
          echo "Benchmarking: $WITH_BENCHMARKING"
          echo "Dry run: $DRY_RUN"
        env:
          BUMP_LEVEL: ${{ inputs.bumpLevel }}
          WITH_INTEGRATION_TESTS: ${{ inputs.withIntegrationTests }}
          WITH_BENCHMARKING: ${{ inputs.withBenchmarking }}
          DRY_RUN: ${{ inputs.dryRun }}
      - name: Checkout latest changes
        uses: actions/checkout@v4
      - name: Archive latest changes
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: ./
          include-hidden-files: true

  build:
    name: Build crate
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Fetch latest changes
        uses: actions/download-artifact@v4
        with:
          name: source-code
      - name: Generate production-ready artifacts
        run: cargo build --release --verbose
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: ./target
          include-hidden-files: true

  test:
    name: Test crate
    runs-on: ubuntu-latest
    needs: [prepare, build]
    steps:
      - name: Fetch source code and production artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Check code formatting
        run: cargo fmt --check
      - name: Run library unit tests
        run: cargo test --lib
        if: ${{ success() }}
      - name: Run integration tests
        run: cargo test --test integration_tests
        if: ${{ success() && inputs.withIntegrationTests }}
      - name: Run benchmarks
        run: cargo bench
        if: ${{ success() && inputs.withBenchmarking }}

  deploy:
    name: Deploy crate
    runs-on: ubuntu-latest
    needs: [prepare, build, test]
    steps:
      - name: Install cargo-release from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-release
          version: "0.25.17"
      - name: Fetch source code and production artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Trigger new deployment in dry run mode
        run: cargo release ${{ inputs.bumpLevel }} --allow-dirty
        if: ${{ inputs.dryRun }}
      - name: Trigger new deployment
        run: cargo release ${{ inputs.bumpLevel }} --execute --allow-dirty
        if: ${{ !inputs.dryRun }}

  cleanup:
    name: Cleanup artifacts
    runs-on: ubuntu-latest
    needs: [prepare, build, test, deploy]
    if: ${{ always() }}
    steps:
      - name: Delete all archived artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          failOnError: false
          name: |
            target
            source-code
